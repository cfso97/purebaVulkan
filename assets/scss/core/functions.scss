/// Native `url(..)` function wrapper
/// @param {String} $base - base URL for the asset
/// @param {String} $type - asset type folder (e.g. `fonts/`)
/// @param {String} $path - asset path
/// @return {Url}
@function asset($base, $type, $path) {
  @return url($base + $type + $path);
}

/// Returns URL to an image based on its path
/// @param {String} $path - image path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function image($path, $base: $base-url) {
  @return asset($base, 'images/', $path);
}

/// Returns URL to a font based on its path
/// @param {String} $path - font path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function font($path, $base: $base-url) {
  @return asset($base, 'fonts/', $path);
}

@function hex-to-rgb($hex) {
  @return red($hex), green($hex), blue($hex);
}

@function hex-to-hsl($hex) {
  @return hue($hex), saturation($hex), lightness($hex);
}

//@function lightness($color, $lightnessMultiplier) {
//  //$color: str-replace($color, 'var(');
//  //$color: str-replace($color, ')');
//  $color_hsl: hex-to-hsl($color);
//  $color-h: nth($color_hsl, 1);
//  $color-s: nth($color_hsl, 2);
//  $color-l: nth($color_hsl, 3);
//  @return hsl($color-h, $color-s, calc(#{$color-l} * #{$lightnessMultiplier}));
//}
//
//@function darkness($color, $darknessMultiplier) {
//  $color: str-replace($color, 'var(');
//  $color: str-replace($color, ')');
//  $color-hex: var(#{$color});
//  $color_hsl: hex-to-hsl($color-hex);
//  $color-h: nth($color_hsl, 1);
//  $color-s: nth($color_hsl, 2);
//  $color-l: nth($color_hsl, 3);
//  @return hsl($color-h, $color-s, calc(#{$color-l} * (1 - #{$darknessMultiplier})));
//}

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  @return $string;
}
